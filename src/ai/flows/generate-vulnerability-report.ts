// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A Genkit flow for generating a detailed vulnerability report from a user registration page URL analysis.
 *
 * - generateVulnerabilityReport - A function that handles the generation of the vulnerability report.
 * - GenerateVulnerabilityReportInput - The input type for the generateVulnerabilityReport function.
 * - GenerateVulnerabilityReportOutput - The return type for the generateVulnerabilityReport function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateVulnerabilityReportInputSchema = z.object({
  analysis: z
    .string()
    .describe(
      'The analysis of the user registration page URL, containing identified issues.'
    ),
});

export type GenerateVulnerabilityReportInput = z.infer<
  typeof GenerateVulnerabilityReportInputSchema
>;

const GenerateVulnerabilityReportOutputSchema = z.object({
  report: z
    .string()
    .describe(
      'A detailed vulnerability report indicating whether each identified issue represents a vulnerability and whether it could lead to potential account lockouts.'
    ),
});

export type GenerateVulnerabilityReportOutput = z.infer<
  typeof GenerateVulnerabilityReportOutputSchema
>;

export async function generateVulnerabilityReport(
  input: GenerateVulnerabilityReportInput
): Promise<GenerateVulnerabilityReportOutput> {
  return generateVulnerabilityReportFlow(input);
}

const generateVulnerabilityReportPrompt = ai.definePrompt({
  name: 'generateVulnerabilityReportPrompt',
  input: {schema: GenerateVulnerabilityReportInputSchema},
  output: {schema: GenerateVulnerabilityReportOutputSchema},
  prompt: `As a security analyst, generate a detailed vulnerability report from the following analysis of a user registration page URL. Indicate whether each identified issue represents a vulnerability and whether it could lead to potential account lockouts, so I can easily understand and prioritize remediation efforts.\n\nAnalysis: {{{analysis}}}`,
});

const generateVulnerabilityReportFlow = ai.defineFlow(
  {
    name: 'generateVulnerabilityReportFlow',
    inputSchema: GenerateVulnerabilityReportInputSchema,
    outputSchema: GenerateVulnerabilityReportOutputSchema,
  },
  async input => {
    const {output} = await generateVulnerabilityReportPrompt(input);
    return output!;
  }
);
